
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int      @id @default(autoincrement())
  username       String   @unique
  password       String
  is_admin       Boolean? @default(false)
  is_super_admin Boolean? @default(false)
  experiments    Experiment[]
}


model Experiment {
  id          Int         @id @default(autoincrement())
  title       String      @unique
  description String?
  start_date  DateTime    @db.Date
  owner       User        @relation(fields: [ownerId], references: [id])
  ownerId     Int 
  conditions  Condition[]
  assays      Assay[]          
}

model Assay {
  id           Int        @id @default(autoincrement())
  experiment   Experiment @relation(fields: [experimentId], references: [id], onDelete: Cascade)
  experimentId Int
  condition    Condition  @relation(fields: [conditionId], references: [id], onDelete: Cascade)
  conditionId  Int
  result       AssayResult?
  type         Int
  week         Int
  @@unique([experimentId, conditionId, week, type], name: "UniqueAssayTypePerWeekAndCondition")
}

model AssayResult {
  id          Int      @id @default(autoincrement())
  assay       Assay    @relation(fields: [assayId], references: [id])
  assayId     Int      @unique
  result      Float?
  comment     String?
  last_editor String
}



model Condition {
  id           Int        @id @default(autoincrement())
  experiment   Experiment @relation(fields: [experimentId], references: [id], onDelete: Cascade)
  experimentId Int
  name         String
  control      Boolean?   @default(false)
  Assay        Assay[]

  @@unique([experimentId, name], name: "UniqueExperimentConditionName")
}
